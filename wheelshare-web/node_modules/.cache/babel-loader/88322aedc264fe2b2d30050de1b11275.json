{"ast":null,"code":"import * as vec4 from 'gl-matrix/vec4';\nexport function createMat4() {\n  return [1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1];\n}\nexport function transformVector(matrix, vector) {\n  const result = vec4.transformMat4([], vector, matrix);\n  vec4.scale(result, result, 1 / result[3]);\n  return result;\n}\nexport function mod(value, divisor) {\n  const modulus = value % divisor;\n  return modulus < 0 ? divisor + modulus : modulus;\n}\nexport function lerp(start, end, step) {\n  return step * end + (1 - step) * start;\n}\nexport function clamp(x, min, max) {\n  return x < min ? min : x > max ? max : x;\n}\n\nfunction ieLog2(x) {\n  return Math.log(x) * Math.LOG2E;\n}\n\nexport const log2 = Math.log2 || ieLog2;","map":{"version":3,"mappings":"AAAA,OAAO,KAAKA,IAAZ,MAAsB,gBAAtB;AAGA,OAAO,SAASC,UAAT,GAAsB;AAC3B,SAAO,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,EAAa,CAAb,EAAgB,CAAhB,EAAmB,CAAnB,EAAsB,CAAtB,EAAyB,CAAzB,EAA4B,CAA5B,EAA+B,CAA/B,EAAkC,CAAlC,EAAqC,CAArC,EAAwC,CAAxC,EAA2C,CAA3C,EAA8C,CAA9C,CAAP;AACD;AAGD,OAAO,SAASC,eAAT,CAAyBC,MAAzB,EAAiCC,MAAjC,EAAyC;AAC9C,QAAMC,MAAM,GAAGL,IAAI,CAACM,aAALN,CAAmB,EAAnBA,EAAuBI,MAAvBJ,EAA+BG,MAA/BH,CAAf;AACAA,MAAI,CAACO,KAALP,CAAWK,MAAXL,EAAmBK,MAAnBL,EAA2B,IAAIK,MAAM,CAAC,CAAD,CAArCL;AACA,SAAOK,MAAP;AACD;AAED,OAAO,SAASG,GAAT,CAAaC,KAAb,EAAoBC,OAApB,EAA6B;AAClC,QAAMC,OAAO,GAAGF,KAAK,GAAGC,OAAxB;AACA,SAAOC,OAAO,GAAG,CAAVA,GAAcD,OAAO,GAAGC,OAAxBA,GAAkCA,OAAzC;AACD;AAED,OAAO,SAASC,IAAT,CAAcC,KAAd,EAAqBC,GAArB,EAA0BC,IAA1B,EAAgC;AACrC,SAAOA,IAAI,GAAGD,GAAPC,GAAa,CAAC,IAAIA,IAAL,IAAaF,KAAjC;AACD;AAED,OAAO,SAASG,KAAT,CAAeC,CAAf,EAAkBC,GAAlB,EAAuBC,GAAvB,EAA4B;AACjC,SAAOF,CAAC,GAAGC,GAAJD,GAAUC,GAAVD,GAAgBA,CAAC,GAAGE,GAAJF,GAAUE,GAAVF,GAAgBA,CAAvC;AACD;;AAED,SAASG,MAAT,CAAgBH,CAAhB,EAAmB;AACjB,SAAOI,IAAI,CAACC,GAALD,CAASJ,CAATI,IAAcA,IAAI,CAACE,KAA1B;AACD;;AAED,OAAO,MAAMC,IAAI,GAAGH,IAAI,CAACG,IAALH,IAAaD,MAA1B","names":["vec4","createMat4","transformVector","matrix","vector","result","transformMat4","scale","mod","value","divisor","modulus","lerp","start","end","step","clamp","x","min","max","ieLog2","Math","log","LOG2E","log2"],"sources":["../../src/math-utils.js"],"sourcesContent":["import * as vec4 from 'gl-matrix/vec4';\n\n// Helper, avoids low-precision 32 bit matrices from gl-matrix mat4.create()\nexport function createMat4() {\n  return [1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1];\n}\n\n// Transforms a vec4 with a projection matrix\nexport function transformVector(matrix, vector) {\n  const result = vec4.transformMat4([], vector, matrix);\n  vec4.scale(result, result, 1 / result[3]);\n  return result;\n}\n\nexport function mod(value, divisor) {\n  const modulus = value % divisor;\n  return modulus < 0 ? divisor + modulus : modulus;\n}\n\nexport function lerp(start, end, step) {\n  return step * end + (1 - step) * start;\n}\n\nexport function clamp(x, min, max) {\n  return x < min ? min : x > max ? max : x;\n}\n\nfunction ieLog2(x) {\n  return Math.log(x) * Math.LOG2E;\n}\n// Handle missing log2 in IE 11\nexport const log2 = Math.log2 || ieLog2;\n"]},"metadata":{},"sourceType":"module"}