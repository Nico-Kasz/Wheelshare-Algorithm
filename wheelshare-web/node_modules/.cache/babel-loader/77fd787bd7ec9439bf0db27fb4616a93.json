{"ast":null,"code":"var WRAPPED_ANGULAR_PROPS = {\n  longitude: 1,\n  bearing: 1\n};\nexport function mod(value, divisor) {\n  var modulus = value % divisor;\n  return modulus < 0 ? divisor + modulus : modulus;\n}\nexport function isValid(prop) {\n  return Number.isFinite(prop) || Array.isArray(prop);\n}\n\nfunction isWrappedAngularProp(propName) {\n  return propName in WRAPPED_ANGULAR_PROPS;\n}\n\nexport function getEndValueByShortestPath(propName, startValue, endValue) {\n  if (isWrappedAngularProp(propName) && Math.abs(endValue - startValue) > 180) {\n    endValue = endValue < 0 ? endValue + 360 : endValue - 360;\n  }\n\n  return endValue;\n}","map":{"version":3,"mappings":"AAAA,IAAMA,qBAAqB,GAAG;AAC5BC,WAAS,EAAE,CADiB;AAE5BC,SAAO,EAAE;AAFmB,CAA9B;AAKA,OAAO,SAASC,GAAT,CAAaC,KAAb,EAAoBC,OAApB,EAA6B;AAClC,MAAMC,OAAO,GAAGF,KAAK,GAAGC,OAAxB;AACA,SAAOC,OAAO,GAAG,CAAVA,GAAcD,OAAO,GAAGC,OAAxBA,GAAkCA,OAAzC;AACD;AAED,OAAO,SAASC,OAAT,CAAiBC,IAAjB,EAAuB;AAC5B,SAAOC,MAAM,CAACC,QAAPD,CAAgBD,IAAhBC,KAAyBE,KAAK,CAACC,OAAND,CAAcH,IAAdG,CAAhC;AACD;;AAED,SAASE,oBAAT,CAA8BC,QAA9B,EAAwC;AACtC,SAAOA,QAAQ,IAAId,qBAAnB;AACD;;AAED,OAAO,SAASe,yBAAT,CAAmCD,QAAnC,EAA6CE,UAA7C,EAAyDC,QAAzD,EAAmE;AACxE,MAAIJ,oBAAoB,CAACC,QAAD,CAApBD,IAAkCK,IAAI,CAACC,GAALD,CAASD,QAAQ,GAAGD,UAApBE,IAAkC,GAAxE,EAA6E;AAC3ED,YAAQ,GAAGA,QAAQ,GAAG,CAAXA,GAAeA,QAAQ,GAAG,GAA1BA,GAAgCA,QAAQ,GAAG,GAAtDA;AACD;;AACD,SAAOA,QAAP;AACD","names":["WRAPPED_ANGULAR_PROPS","longitude","bearing","mod","value","divisor","modulus","isValid","prop","Number","isFinite","Array","isArray","isWrappedAngularProp","propName","getEndValueByShortestPath","startValue","endValue","Math","abs"],"sources":["../../../../src/utils/transition/transition-utils.js"],"sourcesContent":["const WRAPPED_ANGULAR_PROPS = {\n  longitude: 1,\n  bearing: 1\n};\n\nexport function mod(value, divisor) {\n  const modulus = value % divisor;\n  return modulus < 0 ? divisor + modulus : modulus;\n}\n\nexport function isValid(prop) {\n  return Number.isFinite(prop) || Array.isArray(prop);\n}\n\nfunction isWrappedAngularProp(propName) {\n  return propName in WRAPPED_ANGULAR_PROPS;\n}\n\nexport function getEndValueByShortestPath(propName, startValue, endValue) {\n  if (isWrappedAngularProp(propName) && Math.abs(endValue - startValue) > 180) {\n    endValue = endValue < 0 ? endValue + 360 : endValue - 360;\n  }\n  return endValue;\n}\n"]},"metadata":{},"sourceType":"module"}