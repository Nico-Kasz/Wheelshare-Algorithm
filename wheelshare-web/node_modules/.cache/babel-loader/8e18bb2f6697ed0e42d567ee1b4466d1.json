{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nimport { useContext, useEffect, useMemo, useState, useRef } from 'react';\nimport * as PropTypes from 'prop-types';\nimport MapContext from './map-context';\nimport assert from '../utils/assert';\nimport deepEqual from '../utils/deep-equal';\nvar LAYER_TYPES = ['fill', 'line', 'symbol', 'circle', 'fill-extrusion', 'raster', 'background', 'heatmap', 'hillshade', 'sky'];\nvar propTypes = {\n  type: PropTypes.oneOf(LAYER_TYPES).isRequired,\n  id: PropTypes.string,\n  source: PropTypes.string,\n  beforeId: PropTypes.string\n};\n\nfunction diffLayerStyles(map, id, props, prevProps) {\n  var _props$layout = props.layout,\n      layout = _props$layout === void 0 ? {} : _props$layout,\n      _props$paint = props.paint,\n      paint = _props$paint === void 0 ? {} : _props$paint,\n      filter = props.filter,\n      minzoom = props.minzoom,\n      maxzoom = props.maxzoom,\n      beforeId = props.beforeId,\n      otherProps = _objectWithoutProperties(props, [\"layout\", \"paint\", \"filter\", \"minzoom\", \"maxzoom\", \"beforeId\"]);\n\n  if (beforeId !== prevProps.beforeId) {\n    map.moveLayer(id, beforeId);\n  }\n\n  if (layout !== prevProps.layout) {\n    var prevLayout = prevProps.layout || {};\n\n    for (var key in layout) {\n      if (!deepEqual(layout[key], prevLayout[key])) {\n        map.setLayoutProperty(id, key, layout[key]);\n      }\n    }\n\n    for (var _key in prevLayout) {\n      if (!layout.hasOwnProperty(_key)) {\n        map.setLayoutProperty(id, _key, undefined);\n      }\n    }\n  }\n\n  if (paint !== prevProps.paint) {\n    var prevPaint = prevProps.paint || {};\n\n    for (var _key2 in paint) {\n      if (!deepEqual(paint[_key2], prevPaint[_key2])) {\n        map.setPaintProperty(id, _key2, paint[_key2]);\n      }\n    }\n\n    for (var _key3 in prevPaint) {\n      if (!paint.hasOwnProperty(_key3)) {\n        map.setPaintProperty(id, _key3, undefined);\n      }\n    }\n  }\n\n  if (!deepEqual(filter, prevProps.filter)) {\n    map.setFilter(id, filter);\n  }\n\n  if (minzoom !== prevProps.minzoom || maxzoom !== prevProps.maxzoom) {\n    map.setLayerZoomRange(id, minzoom, maxzoom);\n  }\n\n  for (var _key4 in otherProps) {\n    if (!deepEqual(otherProps[_key4], prevProps[_key4])) {\n      map.setLayerProperty(id, _key4, otherProps[_key4]);\n    }\n  }\n}\n\nfunction createLayer(map, id, props) {\n  if (map.style && map.style._loaded) {\n    var options = _objectSpread(_objectSpread({}, props), {}, {\n      id: id\n    });\n\n    delete options.beforeId;\n    map.addLayer(options, props.beforeId);\n  }\n}\n\nfunction updateLayer(map, id, props, prevProps) {\n  assert(props.id === prevProps.id, 'layer id changed');\n  assert(props.type === prevProps.type, 'layer type changed');\n\n  try {\n    diffLayerStyles(map, id, props, prevProps);\n  } catch (error) {\n    console.warn(error);\n  }\n}\n\nvar layerCounter = 0;\n\nfunction Layer(props) {\n  var context = useContext(MapContext);\n  var propsRef = useRef({\n    id: props.id,\n    type: props.type\n  });\n\n  var _useState = useState(0),\n      _useState2 = _slicedToArray(_useState, 2),\n      setStyleLoaded = _useState2[1];\n\n  var id = useMemo(function () {\n    return props.id || \"jsx-layer-\".concat(layerCounter++);\n  }, []);\n  var map = context.map;\n  useEffect(function () {\n    if (map) {\n      var forceUpdate = function forceUpdate() {\n        return setStyleLoaded(function (version) {\n          return version + 1;\n        });\n      };\n\n      map.on('styledata', forceUpdate);\n      return function () {\n        map.off('styledata', forceUpdate);\n\n        if (map.style && map.style._loaded) {\n          map.removeLayer(id);\n        }\n      };\n    }\n\n    return undefined;\n  }, [map]);\n  var layer = map && map.style && map.getLayer(id);\n\n  if (layer) {\n    updateLayer(map, id, props, propsRef.current);\n  } else {\n    createLayer(map, id, props);\n  }\n\n  propsRef.current = props;\n  return null;\n}\n\nLayer.propTypes = propTypes;\nexport default Layer;","map":{"version":3,"mappings":"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","names":["useContext","useEffect","useMemo","useState","useRef","PropTypes","MapContext","assert","deepEqual","LAYER_TYPES","propTypes","type","oneOf","isRequired","id","string","source","beforeId","diffLayerStyles","map","props","prevProps","layout","paint","filter","minzoom","maxzoom","otherProps","moveLayer","prevLayout","key","setLayoutProperty","hasOwnProperty","undefined","prevPaint","setPaintProperty","setFilter","setLayerZoomRange","setLayerProperty","createLayer","style","_loaded","options","addLayer","updateLayer","error","console","warn","layerCounter","Layer","context","propsRef","setStyleLoaded","forceUpdate","version","on","off","removeLayer","layer","getLayer","current"],"sources":["../../../src/components/layer.js"],"sourcesContent":["// Copyright (c) 2015 Uber Technologies, Inc.\n\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\nimport {useContext, useEffect, useMemo, useState, useRef} from 'react';\nimport * as PropTypes from 'prop-types';\nimport MapContext from './map-context';\nimport assert from '../utils/assert';\nimport deepEqual from '../utils/deep-equal';\n\nconst LAYER_TYPES = [\n  'fill',\n  'line',\n  'symbol',\n  'circle',\n  'fill-extrusion',\n  'raster',\n  'background',\n  'heatmap',\n  'hillshade',\n  'sky'\n];\n\nconst propTypes = {\n  type: PropTypes.oneOf(LAYER_TYPES).isRequired,\n  id: PropTypes.string,\n  source: PropTypes.string,\n  beforeId: PropTypes.string\n};\n\n/* eslint-disable complexity, max-statements */\nfunction diffLayerStyles(map, id, props, prevProps) {\n  const {layout = {}, paint = {}, filter, minzoom, maxzoom, beforeId, ...otherProps} = props;\n\n  if (beforeId !== prevProps.beforeId) {\n    map.moveLayer(id, beforeId);\n  }\n  if (layout !== prevProps.layout) {\n    const prevLayout = prevProps.layout || {};\n    for (const key in layout) {\n      if (!deepEqual(layout[key], prevLayout[key])) {\n        map.setLayoutProperty(id, key, layout[key]);\n      }\n    }\n    for (const key in prevLayout) {\n      if (!layout.hasOwnProperty(key)) {\n        map.setLayoutProperty(id, key, undefined);\n      }\n    }\n  }\n  if (paint !== prevProps.paint) {\n    const prevPaint = prevProps.paint || {};\n    for (const key in paint) {\n      if (!deepEqual(paint[key], prevPaint[key])) {\n        map.setPaintProperty(id, key, paint[key]);\n      }\n    }\n    for (const key in prevPaint) {\n      if (!paint.hasOwnProperty(key)) {\n        map.setPaintProperty(id, key, undefined);\n      }\n    }\n  }\n  if (!deepEqual(filter, prevProps.filter)) {\n    map.setFilter(id, filter);\n  }\n  if (minzoom !== prevProps.minzoom || maxzoom !== prevProps.maxzoom) {\n    map.setLayerZoomRange(id, minzoom, maxzoom);\n  }\n  for (const key in otherProps) {\n    if (!deepEqual(otherProps[key], prevProps[key])) {\n      map.setLayerProperty(id, key, otherProps[key]);\n    }\n  }\n}\n\nfunction createLayer(map, id, props) {\n  if (map.style && map.style._loaded) {\n    const options = {...props, id};\n    delete options.beforeId;\n\n    map.addLayer(options, props.beforeId);\n  }\n}\n\nfunction updateLayer(map, id, props, prevProps) {\n  assert(props.id === prevProps.id, 'layer id changed');\n  assert(props.type === prevProps.type, 'layer type changed');\n\n  try {\n    diffLayerStyles(map, id, props, prevProps);\n  } catch (error) {\n    console.warn(error); // eslint-disable-line\n  }\n}\n/* eslint-enable complexity, max-statements */\n\nlet layerCounter = 0;\n\nfunction Layer(props) {\n  const context = useContext(MapContext);\n  const propsRef = useRef({id: props.id, type: props.type});\n  const [, setStyleLoaded] = useState(0);\n\n  const id = useMemo(() => props.id || `jsx-layer-${layerCounter++}`, []);\n  const {map} = context;\n\n  useEffect(() => {\n    if (map) {\n      const forceUpdate = () => setStyleLoaded(version => version + 1);\n      map.on('styledata', forceUpdate);\n\n      return () => {\n        map.off('styledata', forceUpdate);\n        if (map.style && map.style._loaded) {\n          map.removeLayer(id);\n        }\n      };\n    }\n    return undefined;\n  }, [map]);\n\n  const layer = map && map.style && map.getLayer(id);\n  if (layer) {\n    updateLayer(map, id, props, propsRef.current);\n  } else {\n    createLayer(map, id, props);\n  }\n\n  // Store last rendered props\n  propsRef.current = props;\n\n  return null;\n}\n\nLayer.propTypes = propTypes;\n\nexport default Layer;\n"]},"metadata":{},"sourceType":"module"}