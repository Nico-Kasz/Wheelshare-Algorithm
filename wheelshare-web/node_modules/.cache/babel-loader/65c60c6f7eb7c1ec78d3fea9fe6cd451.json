{"ast":null,"code":"import { worldToLngLat } from './web-mercator-utils';\nimport { mod, log2 } from './math-utils';\nconst TILE_SIZE = 512;\nexport default function normalizeViewportProps(_ref) {\n  let {\n    width,\n    height,\n    longitude,\n    latitude,\n    zoom,\n    pitch = 0,\n    bearing = 0\n  } = _ref;\n\n  if (longitude < -180 || longitude > 180) {\n    longitude = mod(longitude + 180, 360) - 180;\n  }\n\n  if (bearing < -180 || bearing > 180) {\n    bearing = mod(bearing + 180, 360) - 180;\n  }\n\n  const minZoom = log2(height / TILE_SIZE);\n\n  if (zoom <= minZoom) {\n    zoom = minZoom;\n    latitude = 0;\n  } else {\n    const halfHeightPixels = height / 2 / Math.pow(2, zoom);\n    const minLatitude = worldToLngLat([0, halfHeightPixels])[1];\n\n    if (latitude < minLatitude) {\n      latitude = minLatitude;\n    } else {\n      const maxLatitude = worldToLngLat([0, TILE_SIZE - halfHeightPixels])[1];\n\n      if (latitude > maxLatitude) {\n        latitude = maxLatitude;\n      }\n    }\n  }\n\n  return {\n    width,\n    height,\n    longitude,\n    latitude,\n    zoom,\n    pitch,\n    bearing\n  };\n}","map":{"version":3,"mappings":"AAAA,SAAQA,aAAR,QAA4B,sBAA5B;AACA,SAAQC,GAAR,EAAaC,IAAb,QAAwB,cAAxB;AAGA,MAAMC,SAAS,GAAG,GAAlB;AAIA,eAAe,SAASC,sBAAT,OAQZ;AAAA,MAR4C;AAC7CC,SAD6C;AAE7CC,UAF6C;AAG7CC,aAH6C;AAI7CC,YAJ6C;AAK7CC,QAL6C;AAM7CC,SAAK,GAAG,CANqC;AAO7CC,WAAO,GAAG;AAPmC,GAQ5C;;AAED,MAAIJ,SAAS,GAAG,CAAC,GAAbA,IAAoBA,SAAS,GAAG,GAApC,EAAyC;AACvCA,aAAS,GAAGN,GAAG,CAACM,SAAS,GAAG,GAAb,EAAkB,GAAlB,CAAHN,GAA4B,GAAxCM;AACD;;AACD,MAAII,OAAO,GAAG,CAAC,GAAXA,IAAkBA,OAAO,GAAG,GAAhC,EAAqC;AACnCA,WAAO,GAAGV,GAAG,CAACU,OAAO,GAAG,GAAX,EAAgB,GAAhB,CAAHV,GAA0B,GAApCU;AACD;;AAGD,QAAMC,OAAO,GAAGV,IAAI,CAACI,MAAM,GAAGH,SAAV,CAApB;;AACA,MAAIM,IAAI,IAAIG,OAAZ,EAAqB;AACnBH,QAAI,GAAGG,OAAPH;AACAD,YAAQ,GAAG,CAAXA;AAFF,SAGO;AAEL,UAAMK,gBAAgB,GAAGP,MAAM,GAAG,CAATA,GAAaQ,IAAI,CAACC,GAALD,CAAS,CAATA,EAAYL,IAAZK,CAAtC;AACA,UAAME,WAAW,GAAGhB,aAAa,CAAC,CAAC,CAAD,EAAIa,gBAAJ,CAAD,CAAbb,CAAqC,CAArCA,CAApB;;AACA,QAAIQ,QAAQ,GAAGQ,WAAf,EAA4B;AAC1BR,cAAQ,GAAGQ,WAAXR;AADF,WAEO;AACL,YAAMS,WAAW,GAAGjB,aAAa,CAAC,CAAC,CAAD,EAAIG,SAAS,GAAGU,gBAAhB,CAAD,CAAbb,CAAiD,CAAjDA,CAApB;;AACA,UAAIQ,QAAQ,GAAGS,WAAf,EAA4B;AAC1BT,gBAAQ,GAAGS,WAAXT;AACD;AACF;AACF;;AAED,SAAO;AAACH,SAAD;AAAQC,UAAR;AAAgBC,aAAhB;AAA2BC,YAA3B;AAAqCC,QAArC;AAA2CC,SAA3C;AAAkDC;AAAlD,GAAP;AACD","names":["worldToLngLat","mod","log2","TILE_SIZE","normalizeViewportProps","width","height","longitude","latitude","zoom","pitch","bearing","minZoom","halfHeightPixels","Math","pow","minLatitude","maxLatitude"],"sources":["../../src/normalize-viewport-props.js"],"sourcesContent":["import {worldToLngLat} from './web-mercator-utils';\nimport {mod, log2} from './math-utils';\n\n// defined by mapbox-gl\nconst TILE_SIZE = 512;\n\n// Apply mathematical constraints to viewport props\n// eslint-disable-next-line complexity\nexport default function normalizeViewportProps({\n  width,\n  height,\n  longitude,\n  latitude,\n  zoom,\n  pitch = 0,\n  bearing = 0\n}) {\n  // Normalize degrees\n  if (longitude < -180 || longitude > 180) {\n    longitude = mod(longitude + 180, 360) - 180;\n  }\n  if (bearing < -180 || bearing > 180) {\n    bearing = mod(bearing + 180, 360) - 180;\n  }\n\n  // Constrain zoom and shift center at low zoom levels\n  const minZoom = log2(height / TILE_SIZE);\n  if (zoom <= minZoom) {\n    zoom = minZoom;\n    latitude = 0;\n  } else {\n    // Eliminate white space above and below the map\n    const halfHeightPixels = height / 2 / Math.pow(2, zoom);\n    const minLatitude = worldToLngLat([0, halfHeightPixels])[1];\n    if (latitude < minLatitude) {\n      latitude = minLatitude;\n    } else {\n      const maxLatitude = worldToLngLat([0, TILE_SIZE - halfHeightPixels])[1];\n      if (latitude > maxLatitude) {\n        latitude = maxLatitude;\n      }\n    }\n  }\n\n  return {width, height, longitude, latitude, zoom, pitch, bearing};\n}\n"]},"metadata":{},"sourceType":"module"}